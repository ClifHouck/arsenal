===================
Configuring Arsenal
===================

Oslo/Config
-----------
Arsenal uses the `oslo.config`_ module to parse and load configuration.
See `oslo.config`_'s documentation for detailed information on the supported
syntax.

Basic Syntax
------------

That said, the basic syntax of the configuration file is fairly
straight-forward.

Sections
~~~~~~~~

Arsenal's configuration file is separated into sections. Each section begins
with a bracket enclosed string. For example::

    [director]

Begins the "director" configuration section. Each line following the section
directive will populate that section's configuration options, until another
section directive is parsed, or the end of the file is reached.

Options
~~~~~~~

Each option has this basic format::

    <option_name>=<value>

Where <option_name> is the option's name, and <value> is the value to assign
to the option.

A Short Example
~~~~~~~~~~~~~~~
The following::
    
    [director]
    dry_run=True

Would set the ``dry_run`` option to the boolean value 'True', which belongs to
the ``[director]`` section.

arsenal.conf
------------
Arsenal reads configuration variables from a single file, canonically called
``arsenal.conf``. The location and name of this configuration file can be changed
as long as the ``--config-file`` argument to ``arsenal-director`` is updated
accordingly.

[director] Section
~~~~~~~~~~~~~~~~~~
The ``[director]`` section contains options which affect how 
``arsenal-director`` gathers information using Scouts.

.. note::
    See ``arsenal/director/director.py`` for all ``[director]`` configuration 
    options.

Important Section Options
+++++++++++++++++++++++++

* **scout** - Configures which Scout will be loaded by ``arsenal-director`` to
  gather data from services. The Scout also currently handles issuing 
  directives to endpoints. The format is::

    <scout_module_name>.<ScoutClassName>

  For example, setting the **scout** option to::

    devstack_scout.DevstackScout

  Would cause ``arsenal-director`` to use the Devstack Scout, which is a Scout
  provided by Arsenal which is designed to work with Devstack_.

* **dry_run** - A boolean option. Setting this option to ``True`` will cause 
  ``arsenal-director`` to run in dry run mode. Which means no directives 
  generated by the configured Strategy will be issued. 
  
.. tip::
  **dry_run** is a great option to use while testing Arsenal without worrying
  about affecting outside services beyond requesting information.

* **directive_spacing** - An integer option. Represents time in seconds. 
  Determines how long the Director will wait between issuing new directives 
  returned by the configured Strategy.

[client_wrapper] Section
~~~~~~~~~~~~~~~~~~~~~~~~~~

The ``[client_wrapper]`` section contains options relevant to the Openstack 
client wrapper provided by Arsenal. Arsenal provides service-specific client
wrappers for Ironic_, Nova_, and Glance_.

The client wrappers provided by Arsenal all provide client caching and 
call-retry behavior. This section provides options to configure part of that 
behavior as well as provide credentials to all wrappers.

.. note::
    Please see ``arsenal/external/client_wrapper.py`` for all 
    ``[client_wrapper]`` configuration options.

.. important:: 
    Credential options defined in the client_wrapper section will be used by
    default by every derived instance of client wrapper unless the credential 
    is overridden in the derived client wrapper's section. For instance,
    if **os_username** is defined in the ``[client_wrapper]`` section, then
    the Nova client wrapper will use the ``client_wrapper.os_username`` value
    unless ``nova.admin_username`` is defined.

Important Section Options
+++++++++++++++++++++++++

* **call_max_retries** - An integer value which determines how many times an
  individual client will be retried, until it is successful.

* **call_retry_interval** - An integer value which Determines how long the 
  client wrapper will wait before trying a call again.

[nova] Section
~~~~~~~~~~~~~~

This section provides options mainly relating to credentials and the endpoint 
to use to communicate with Nova_.

.. note::
    Please see ``arsenal/external/nova_client_wrapper.py`` for all 
    ``[nova]`` configuration options.

[ironic] Section
~~~~~~~~~~~~~~~~

This section provides options mainly relating to credentials and the endpoint 
to use to communicate with Ironic_.

.. note::
    Please see ``arsenal/external/ironic_client_wrapper.py`` for all 
    ``[ironic]`` configuration options.

[glance] Section
~~~~~~~~~~~~~~~~

This section provides options mainly relating to credentials and the endpoint 
to use to communicate with Glance_.

.. note::
    Please see ``arsenal/external/glance_client_wrapper.py`` for all 
    ``[glance]`` configuration options.

A full example configuration
----------------------------

See the `example Arsenal configuration`_ in the Arsenal source tree to see a 
full example configuration to use with ``arsenal-director``.

.. _Devstack: http://docs.openstack.org/developer/devstack/
.. _oslo.config: https://wiki.openstack.org/wiki/Oslo/Config
.. _example configuration: https://github.com/rackerlabs/arsenal/blob/master/etc/arsenal/arsenal.conf
.. _Ironic: https://github.com/openstack/ironic
.. _Nova: https://github.com/openstack/nova
.. _Glance: https://github.com/openstack/glance
.. _example Arsenal configuration: https://github.com/rackerlabs/arsenal/blob/master/etc/arsenal/arsenal.conf
